#!/usr/bin/python
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

<%
    var featureString = '';
    for (var i = 0; i < featurePorts.length; i++) {
        featureString += featurePorts[i].name
        if (i < featurePorts.length - 1) {
            featureString += ', ';
        }
    }
    if (featureString !== '') {
        featureString = ', ' + featureString;
    }

    var labelString = '';
    for (var i = 0; i < labelPorts.length; i++) {
        labelString += labelPorts[i].name
        if (i < labelPorts.length - 1) {
            labelString += ', ';
        }
    }
    if (labelString !== '') {
        labelString = ', ' + labelString;
    }
-%>

class <%= name %>():
    def __init__(self<%= featureString %><%= labelString %>):
        # Get features
        self.features = {}
<%
    for (var i = 0; i < featurePorts.length; i++) {
-%>
        self.features['<%= featurePorts[i].name %>'] = <%= featurePorts[i].name %>
<%
    }
-%>

        # Get labels
        self.labels = {}
<%
    for (var i = 0; i < labelPorts.length; i++) {
-%>
        self.labels['<%= labelPorts[i].name %>'] = <%= labelPorts[i].name %>
<%
}
-%>

    # TODO: Train the model
    def train(self):
        np.random.seed()

        X_train = []
        y_train = []

        for data_point in range(len(self.features[self.features.keys()[0]])):
            feature_vector = [self.features[key][data_point] for key in self.features]
            label_vector = [self.labels[key][data_point] for key in self.labels]
            X_train.append(feature_vector)
            y_train.append(label_vector)

        print "X_train: "
        print X_train
        print "y_train: "
        print y_train
